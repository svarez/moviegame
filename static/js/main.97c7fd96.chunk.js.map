{"version":3,"sources":["api/Api.js","api/ApiUrlsProvider.js","api/ApiSelector.js","utils/getRandomElement.js","utils/getRangeOfYears.js","utils/QuizConstructor.js","utils/UserContext.js","components/Intro.js","utils/GetNextQuestion.js","components/ui/Percentages.js","components/Quiz.js","components/ui/Header.js","routers/AppRouter.js","QuizApp.js","index.js"],"names":["Api","url","a","fetch","catch","err","text","then","errorMessage","props","dispatch","console","log","resp","json","data","apiUrlsProvider","apiKey","process","baseUrlApi","language","methodSearchMovie","methodGetDetails","methodGetRecommendations","methodGetSimilar","methodGetCredits","urlGetSearchMovie","movie","this","encodeURI","urlGetDetails","id","urlGetRecommendations","urlGetCredits","urlGetSimilar","GetCredits","GetSimilar","GetRecommendations","getRandomElements","arr","n","array","Array","len","length","taken","x","Math","floor","random","getRangeOfYears","actualYear","Date","getFullYear","minYear","min","fill","map","_","index","filter","y","String","QuizSelector","favMovie","results","result","original_title","toLowerCase","quizConstructor","getQuestion","question","releaseDateQuestion","directorQuestion","characterQuestion","title","release_date","titleQuestion","date","parseInt","toString","randomYears","answers","sort","correctAnswer","Object","keys","find","key","quiz","crew","job","director","name","similarMovies","Promise","all","similar","d","similarDirectors","cast","selectedCast","selectedActor","selectedCharacter","character","wrongCast","actor","idx","UserContext","createContext","Intro","useContext","setFavMovie","setSelectedMovie","history","useHistory","useState","error","setError","disabled","className","type","autoComplete","placeholder","required","value","onChange","e","target","htmlFor","onClick","preventDefault","movies","selectedMovie","reduce","acc","ele","vote_count","replace","GetNextQuestion","styleWidth","percent","width","Percentages","correctAnswers","totalAnswers","percentCorrect","round","percentWrong","style","Quiz","setCorrectAnswers","setTotalAnswers","radioRef","useRef","setQuiz","useEffect","q","handleChange","current","classList","add","setTimeout","p","ref","el","Header","to","AppRouter","basename","exact","path","component","QuizApp","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.97c7fd96.chunk.js","sourcesContent":["export const Api = async(url) => {\r\n        \r\n    const resp = await fetch(url)\r\n    .catch( err => {\r\n        err.text().then( errorMessage => {\r\n        this.props.dispatch(console.log(errorMessage))\r\n        //ToDo displayTheError\r\n        })\r\n    })\r\n    const data = await resp.json()\r\n    .catch( err => {\r\n        err.text().then( errorMessage => {\r\n        this.props.dispatch(console.log(errorMessage))\r\n        //ToDo displayTheError\r\n        })\r\n    })\r\n    return data;\r\n\r\n}","export const apiUrlsProvider = {\r\n\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    baseUrlApi : 'https://api.themoviedb.org/3/',\r\n    language: 'en-US',\r\n    methodSearchMovie : 'search/movie',\r\n    methodGetDetails : 'movie/',\r\n    methodGetRecommendations : 'recommendations',\r\n    methodGetSimilar : 'similar',\r\n    methodGetCredits : 'credits',\r\n    urlGetSearchMovie: function(movie) {\r\n        movie = movie || 'The Godfather';\r\n        return `${this.baseUrlApi}${this.methodSearchMovie}?&api_key=${this.apiKey}&query=${encodeURI(movie)}&language=${this.language}`\r\n    },\r\n    urlGetDetails: function(id = 238) {\r\n        return `${this.baseUrlApi}${this.methodGetDetails}${id}?&api_key=${this.apiKey}&language=${this.language}`\r\n    },\r\n    urlGetRecommendations: function(id = 238) {\r\n        return `${this.baseUrlApi}${this.methodGetDetails}${id}/${this.methodGetRecommendations}?&api_key=${this.apiKey}&language=${this.language}`\r\n    },\r\n    urlGetCredits: function(id = 238) {\r\n        return `${this.baseUrlApi}${this.methodGetDetails}${id}/${this.methodGetCredits}?&api_key=${this.apiKey}&language=${this.language}`\r\n    },\r\n    urlGetSimilar: function(id = 238) {\r\n        return `${this.baseUrlApi}${this.methodGetDetails}${id}/${this.methodGetSimilar}?&api_key=${this.apiKey}&language=${this.language}`\r\n    }\r\n\r\n}","import { Api } from './Api'\r\nimport { apiUrlsProvider } from './ApiUrlsProvider'\r\n\r\nexport const SearchMovieByName = (movie) => Api(apiUrlsProvider.urlGetSearchMovie(movie));\r\nexport const GetCredits = (id) => Api(apiUrlsProvider.urlGetCredits(id));\r\nexport const GetSimilar = (id) => Api(apiUrlsProvider.urlGetSimilar(id));\r\nexport const GetRecommendations = (id) => Api(apiUrlsProvider.urlGetRecommendations(id));\r\n\r\n\r\n","export const getRandomElements = (arr = {}, n) => {\r\n\r\n    let array = new Array(n),\r\n        len = arr.length,\r\n        taken = new Array(len);\r\n    if (n > len)\r\n        return [];\r\n    while (n--) {\r\n        let x = Math.floor(Math.random() * len);\r\n        array[n] = arr[x in taken ? taken[x] : x];\r\n        taken[x] = --len in taken ? taken[len] : len;\r\n    }\r\n\r\n    return array;\r\n}","export const getRangeOfYears = (n) => {\r\n    const actualYear = new Date().getFullYear()\r\n\r\n    const maxYear = Math.min(n + 5, actualYear)\r\n    const minYear = maxYear - 10\r\n\r\n    return new Array(10).fill()\r\n        .map((_, index) => minYear + index)\r\n        .filter(y => y !== n) \r\n        .map(String)\r\n}\r\n/*export const getRangeOfYears = (n) => {\r\n    const randomYears = [],\r\n    actualYear = (new Date()).getFullYear(),\r\n    maxYear = (n + 5 < actualYear) ? n + 5 : actualYear,\r\n    minYear = (n + 5 < actualYear) ? n - 5 : actualYear - 10;\r\n\r\n    for (let i = minYear; i < maxYear; i++) {\r\n        (i!==n) && randomYears.push((i).toString());\r\n    }\r\n\r\n    return randomYears;\r\n\r\n}*/\r\n\r\n/*export const getRangeOfYears = (n) => {\r\n    const actualYear = new Date().getFullYear()\r\n\r\n    const maxYear = Math.min(n + 5, actualYear)\r\n    const minYear = maxYear - 10\r\n\r\n    return new Array(10).fill()\r\n        .map((_, index) => minYear + index)\r\n        .filter(y => y !== n) \r\n        .map(String)\r\n}\r\n\r\nconst shuffleArray = array => {\r\n  for (let i = array.length - 1; i > 0; i--) {\r\n    const j = Math.floor(Math.random() * (i + 1));\r\n    const temp = array[i];\r\n    array[i] = array[j];\r\n    array[j] = temp;\r\n  }\r\n}\r\n\r\nconst pickRandom = (n, years) => {\r\n shuffleArray(years) \r\n  return new Array(n).fill().\r\n  map((_, index) => years[index])\r\n}\r\n\r\nconst addValidYear = (year, years) => {\r\n years.push(year.toString()) \r\n  return years\r\n}\r\n\r\nconst generateAnswers = (year) => {\r\n const result = addValidYear(year, pickRandom(3, getRangeOfYears(year)))\r\n  shuffleArray(result)\r\n  return result\r\n}\r\n\r\nconsole.log(generateAnswers(1989))*/","import { GetCredits, GetSimilar, SearchMovieByName } from \"../api/ApiSelector\"\r\nimport { getRandomElements } from \"./getRandomElement\";\r\nimport { getRangeOfYears } from \"./getRangeOfYears\";\r\n\r\nexport const QuizSelector = async (favMovie) => {\r\n\r\n    const { results } = await SearchMovieByName(favMovie);\r\n    return results.filter(result => result.original_title.toLowerCase() === favMovie.toLowerCase());\r\n\r\n}\r\nexport const quizConstructor = (movie) => {\r\n\r\n    return getQuestion(movie).then(question=>question);\r\n\r\n}\r\nconst getQuestion = (movie) => {\r\n\r\n    const randomNumber = Math.floor(Math.random() * 3);\r\n          \r\n    switch (randomNumber) {\r\n        case 0:\r\n            return releaseDateQuestion(movie)\r\n\r\n        case 1:\r\n            return directorQuestion(movie)\r\n\r\n        case 2:\r\n            return characterQuestion(movie)\r\n    \r\n        default:\r\n            return releaseDateQuestion(movie)\r\n    }\r\n\r\n}\r\nconst releaseDateQuestion = async (movie) => {\r\n\r\n    const { title, release_date } = movie;\r\n    \r\n    const titleQuestion = `What year was ${title} released?`;\r\n    const date = parseInt(release_date).toString();\r\n    const randomYears = getRangeOfYears(parseInt(date));\r\n    const answers = [...getRandomElements(randomYears, 3), date].sort(() => Math.random() - 0.5);\r\n    const correctAnswer = Object.keys(answers).find(key => answers[key] === date)\r\n    \r\n    const quiz = {\r\n                title: titleQuestion,\r\n                answers: answers,\r\n                correctAnswer: correctAnswer\r\n            }\r\n\r\n    return quiz\r\n\r\n}\r\n\r\n\r\nconst directorQuestion = async (movie) => {\r\n\r\n    const { id, title } = movie\r\n    const {crew} = await GetCredits(id)\r\n    const {name : director} = crew.find((crew) => crew.job === 'Director')\r\n    const {results : similarMovies} = await GetSimilar(id)\r\n    const similarDirectors = await Promise.all(similarMovies.map(async(similar)=>{\r\n\r\n            return await GetCredits(similar.id).then(async({crew})=>{\r\n                return crew.find(d => (d.job === 'Director' && d.name !== director))?.name\r\n            });\r\n            \r\n    })\r\n    );\r\n    const titleQuestion = `Who directed the movie ${title}?`\r\n    const answers = [...getRandomElements(similarDirectors, 3), director].sort(() => Math.random() - 0.5)\r\n    const correctAnswer = Object.keys(answers).find(key => answers[key] === director)\r\n    \r\n    const quiz = {\r\n                title: titleQuestion,\r\n                answers: answers,\r\n                correctAnswer: correctAnswer\r\n            };\r\n\r\n    return quiz\r\n\r\n}\r\nconst characterQuestion = async (movie) => {\r\n\r\n    const { id, title } = movie\r\n    const {cast} = await GetCredits(id)\r\n    const selectedCast = cast[Math.floor(Math.random() * 4)]\r\n    const selectedActor = selectedCast.name\r\n    const selectedCharacter = selectedCast.character\r\n    const wrongCast = cast.map(actor=>actor.name).filter((name,idx)=>(name!==selectedActor && idx < 10))\r\n    const titleQuestion = `What actor/actress plays ${selectedCharacter} in ${title}?`\r\n    const answers = [...getRandomElements(wrongCast, 3), selectedActor].sort(() => Math.random() - 0.5)\r\n    const correctAnswer = Object.keys(answers).find(key => answers[key] === selectedActor)\r\n\r\n    const quiz = {\r\n        title: titleQuestion,\r\n        answers: answers,\r\n        correctAnswer: correctAnswer\r\n    };\r\n\r\n    return quiz\r\n\r\n}\r\n","import { createContext } from \"react\";\r\n\r\nexport const UserContext = createContext(null);","import React, { useContext, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { QuizSelector } from '../utils/QuizConstructor';\r\nimport { UserContext } from '../utils/UserContext';\r\n\r\nexport const Intro = () => {\r\n\r\n    const {favMovie, setFavMovie, setSelectedMovie} = useContext(UserContext);\r\n    const history = useHistory();\r\n    const [error, setError] = useState('')\r\n\r\n    const handleInputChange = (e) => {\r\n        setFavMovie(e.target.value)\r\n        setError('')\r\n    }\r\n\r\n    let disabled = !favMovie ? true : false;\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        QuizSelector(favMovie).then(movies=> {\r\n            if(movies.length > 0) {\r\n                const selectedMovie = movies.reduce((acc, ele) => (acc.vote_count > ele.vote_count) ? acc : ele );\r\n                setSelectedMovie(selectedMovie);\r\n                history.replace('/quiz')\r\n            } else {\r\n                setError(`We couldn't find any title with the name of ${favMovie}`)\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        \r\n        <div className=\"intro\">\r\n            <div className=\"description\">\r\n                <h1>Automatic quiz generator</h1>\r\n                <p>In order for us to generate the quiz you must enter the name of your favorite movie:</p>\r\n            </div>\r\n            <div className=\"form\">\r\n                <form>\r\n                    <div className=\"form__field\">\r\n                        <input \r\n                            type=\"text\" \r\n                            className=\"form__field__input\" \r\n                            autoComplete=\"off\"\r\n                            placeholder=\"Your favorite film\" \r\n                            name=\"favFilm\" \r\n                            id=\"favFilm\" \r\n                            required \r\n                            value={ favMovie }\r\n                            onChange={ handleInputChange }\r\n                        />\r\n                        <label \r\n                            htmlFor=\"favFilm\"\r\n                            className=\"form__field__label\"\r\n                            >\r\n                                Your favorite film\r\n                        </label>\r\n                    </div>\r\n                    <button \r\n                        className=\"form__button\"\r\n                        disabled={disabled} \r\n                        onClick={ handleSubmit }\r\n                        >\r\n                            Send\r\n                    </button>  \r\n                </form>\r\n\r\n                { error &&\r\n                    (<div className=\"error-text\">\r\n                        { error }\r\n                    </div>)\r\n                }\r\n\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import { GetRecommendations } from \"../api/ApiSelector\";\r\nimport { getRandomElements } from \"./getRandomElement\";\r\n\r\nexport const GetNextQuestion = async({id}) => {\r\n\r\n    const {results : similarMovies} = await GetRecommendations(id);\r\n    return getRandomElements(similarMovies, 1)[0];\r\n\r\n}","import React from 'react'\r\n\r\nconst styleWidth = (percent) => {\r\n    return {\r\n        width : percent + '%'\r\n    }\r\n}\r\n\r\nexport const Percentages = ({ correctAnswers, totalAnswers }) => {\r\n\r\n    let percentCorrect = totalAnswers < 100 ? correctAnswers : Math.round((correctAnswers * 100)/totalAnswers)\r\n    let percentWrong = totalAnswers < 100 ? (totalAnswers - correctAnswers) : 100 - percentCorrect\r\n\r\n\r\n    return (\r\n        <div className=\"statics\">\r\n            <h3>Correct answers : \r\n                <span className=\"statics__correct-answers\"> { correctAnswers }</span> \r\n                <span className=\"statics__total-answers\"> / { totalAnswers }</span>\r\n            </h3>   \r\n            <div className=\"percent\">\r\n                <div \r\n                    style={ \r\n                        styleWidth(percentCorrect) \r\n                    } \r\n                    className=\"percent__correct\"\r\n                ></div>\r\n                <div \r\n                    style={ \r\n                        styleWidth(percentWrong) \r\n                    } \r\n                    className=\"percent__wrong\"\r\n                ></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext, useEffect, useRef, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { GetNextQuestion } from '../utils/GetNextQuestion';\r\nimport { quizConstructor } from '../utils/QuizConstructor'\r\nimport { UserContext } from '../utils/UserContext';\r\nimport { Percentages } from './ui/Percentages';\r\n\r\nexport const Quiz = () => {\r\n    \r\n    const [correctAnswers, setCorrectAnswers] = useState(0)\r\n    const [totalAnswers, setTotalAnswers] = useState(0)\r\n    const { selectedMovie } = useContext(UserContext);\r\n \r\n    const radioRef = useRef([])\r\n\r\n    const history = useHistory();\r\n    (!selectedMovie && history.replace('./intro'))\r\n\r\n    const [quiz, setQuiz] = useState({\r\n        title : '',\r\n        answers: [],\r\n        correctAnswer: ''\r\n    })\r\n\r\n    useEffect(() => {\r\n\r\n        selectedMovie && (quizConstructor(selectedMovie).then(q=>{\r\n            setQuiz(q)\r\n        })\r\n        )\r\n\r\n    }, [selectedMovie]);\r\n\r\n    const handleChange = (e) => {\r\n\r\n        setTotalAnswers( totalAnswers + 1 )\r\n\r\n        if(quiz.correctAnswer === e.target.value) {\r\n            setCorrectAnswers( correctAnswers + 1 )\r\n            radioRef.current[e.target.value].classList.add(\"correct-answer\");\r\n        } else {\r\n            radioRef.current[quiz.correctAnswer].classList.add(\"correct-answer\");\r\n            radioRef.current[e.target.value].classList.add(\"wrong-answer\");\r\n        }\r\n\r\n        setTimeout(()=>{\r\n    \r\n            setQuiz({\r\n                title : '',\r\n                answers: [],\r\n                correctAnswer: ''\r\n            })\r\n    \r\n            GetNextQuestion(selectedMovie).then(movie=>{\r\n                quizConstructor(movie).then(p=>{\r\n                    setQuiz(p)\r\n                })\r\n            })\r\n\r\n\r\n        }, 1500);\r\n    }\r\n\r\n    return (\r\n        <div className=\"quiz\">\r\n            {<div className=\"question\">\r\n\r\n                <div className=\"fav-movie\">\r\n                    <h2>You chose {selectedMovie.title}</h2>\r\n                </div>\r\n\r\n                <Percentages \r\n                    correctAnswers={ correctAnswers }\r\n                    totalAnswers={ totalAnswers }\r\n                />\r\n\r\n                <div className=\"question__title\">\r\n                    <h1>{ quiz.title }</h1>\r\n                </div>\r\n\r\n                <div className=\"question__answers\">\r\n\r\n                    {\r\n                        Object.keys(quiz.answers).map(id=>\r\n                            <label \r\n                                ref={el => radioRef.current[id] = el} \r\n                                className=\"radio radio-gradient\" \r\n                                key={quiz.answers[id]}\r\n                            >\r\n                                <span className=\"radio__input\">\r\n                                    <input\r\n                                        name='answer'\r\n                                        type=\"radio\"\r\n                                        value={id}\r\n                                        onChange={ handleChange }\r\n                                    /> \r\n                                <span className=\"radio__control\"></span>\r\n                                </span>\r\n                                <span className=\"radio__label\">{quiz.answers[id]}</span>\r\n                            </label>\r\n                        )\r\n                    }\r\n\r\n                </div>\r\n\r\n            </div>}\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport const Header = () => {\r\n    \r\n\r\n    return (\r\n        <div className=\"header\">\r\n            <Link to=\"./\"><h2>moviesgame.</h2></Link>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { \r\n    HashRouter, \r\n    Redirect, \r\n    Route, \r\n    Switch \r\n} from 'react-router-dom'\r\n\r\nimport { Intro } from '../components/Intro'\r\nimport { Quiz } from '../components/Quiz'\r\nimport { Header } from '../components/ui/Header'\r\n\r\n\r\n\r\n\r\n\r\nexport const AppRouter = () => {\r\n    return (\r\n        <HashRouter basename='/'>\r\n\r\n            <div className=\"app-container\">\r\n\r\n                <Header />\r\n\r\n                <div className=\"main-container\">\r\n                    <Switch>\r\n                        <Route exact path=\"/intro\" component={ Intro } />\r\n                        <Route exact path=\"/quiz\" component={ Quiz } />\r\n                        \r\n                        <Redirect to=\"/intro\" />\r\n\r\n                    </Switch>\r\n                </div>\r\n\r\n            </div>\r\n            \r\n        </HashRouter>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { AppRouter } from './routers/AppRouter'\r\nimport { UserContext } from './utils/UserContext'\r\n\r\nexport const QuizApp = () => {\r\n\r\n    const [favMovie, setFavMovie] = useState('')\r\n    const [selectedMovie, setSelectedMovie] = useState('')\r\n\r\n    return (\r\n        <UserContext.Provider value={{\r\n            favMovie,\r\n            setFavMovie,\r\n            selectedMovie,\r\n            setSelectedMovie\r\n        }}>\r\n            <AppRouter />\r\n        </UserContext.Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { QuizApp } from './QuizApp';\n\nimport './styles/styles.scss'\n\nReactDOM.render(\n    <QuizApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}